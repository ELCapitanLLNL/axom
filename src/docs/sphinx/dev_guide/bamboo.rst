.. ##
.. ## Copyright (c) 2016, Lawrence Livermore National Security, LLC.
.. ##
.. ## Produced at the Lawrence Livermore National Laboratory.
.. ##
.. ## All rights reserved.
.. ##
.. ## This file cannot be distributed without permission and
.. ## further review from Lawrence Livermore National Laboratory.
.. ##

.. _bamboo-label:

*******************************
Continuous Integration 
*******************************

*Bamboo* is a continuous integration (CI) tool that is part of the Atlassian
tool suite. The Axom project uses two Bamboo projects, one on the LC
Collaboration Zone (CZ) and one on the LC Restricted Zone (RZ). 

The basic mechanics for managing test plans described in 
:ref:`bambooplan-label` is the same for both Bamboo instances.


===========================
CZ Bamboo Project
===========================

We use the `Axom CZ Bamboo project <https://lc.llnl.gov/bamboo/browse/ASC>`_ 
primarily for manually running Bamboo plans on specific branches. For example,
if you are working on a branch and you want to build the branch code and run 
tests on several LC platforms on the CZ with a variety of compilers, you can
do this easily. The plans for such branch testing are configured so
that when a new Axom git branch is created and pushed to our Bitbucket project,
the branch will appear in the list of branches on which a plan can be run.

There are Bamboo plan options for this branch testing. One is a "smoke test" 
that will build and run tests on a single platform with our default GNU 
compiler. The other is a more comprehensive plan that will build and run tests
on each of the platforms we need to support using the compilers and versions
our users require.

To run a plan on a specific branch, do the following:

  #. Log into the CZ Bamboo tool.
  #. Click on the 'Axom' project.
  #. Select the test plan you want to run.
  #. Click on the branch you want to build and test.
  #. Click 'Run plan' via the 'Run' pulldown menu on the upper right.

Depending on resource availability and what the plan does, the plan may 
take a while to run. When the plan completes, you will receive an email
indicating this and whether everything passed or if there were any failures.
If you need to look at the detailed results (e.g., if a test failed), you
can do the following: 

  #. Click the branch name in the plan.
  #. Click the run number in the summary.
  #. Click the 'artifacts' tab.
  #. Click the artifact that you want to see. The test plan artifacts 
     contain the detailed output generated by Google Test and FRUIT.

We also have one plan that builds and runs tests on the master branch on
a select set of platforms and compilers once per week. Each member of the team
receives an email indicating passes and failures of builds and tests.


===========================
RZ Bamboo Project
===========================

We use the `Axom RZ Bamboo project <https://rzlc.llnl.gov/bamboo/browse/ASC>`_ 
for the bulk of Axom automated build and test operations. This includes:
nightly builds and tests of the develop branch on each of the platform types 
(e.g., TOSS 2, TOSS 3, BG/Q, Blue OS) with a variety of compilers that we need 
to support, user documentation build and install on LC web pages, and 
weekly third-party library builds.


.. _bambooplan-label:

====================================
Bamboo Test Plans
====================================

A Bamboo plan consists of stages, each of which represents a step in a
build and/or test process. Each stage may contain one or more jobs that can
be run in parallel by Bamboo. For example, you may have a stage that compiles
a code and multiple testing stages which follow that can run in parallel.
Each stage contains specific tasks to run. Currently, Axom plans don't exercise 
parallel execution in Bamboo. A typical Axom test plan consists of a set of 
stages, one to build the code and run tests for each platform and compiler 
combination. The tasks comprising a stage are shell commands that navigate
workspace directories on LC systems, check out the axom code, and run scripts
(that we archive in our source code repo) that encode all of the code 
compilation and test execution operations. A final stage parses CTest output.

.. note:: All of our scripts that are run in Bamboo can be found in 
          the source directory `axom/scripts/bamboo`.

To see the specific contents of any particular plan, click on the Axom project
in one of our Bamboo projects and click on a plan. Then, in the 'Actions'
pull-down menu at the upper right, click on 'Configure plan'. Clicking on
the 'Stages' tab will reveal the stages in the plan and clicking on a stage
will show the tasks in the stage, including shell commands, scripts that
are run, etc. 

Creating and configuring a Bamboo plan
----------------------------------------

Here are the steps to create and set up a Bamboo plan once you are in the
appropriate Axom Bamboo project (either CZ or RZ):

  #. Click the 'Create' button at the top of the page and choose either
     'Create a new plan' or 'Clone an existing plan'.

      * When you choose to create a new plan, you can define everything about
        what the plan does.

      * When you clone an existing plan, you make a copy of the plan and its
        entire configuration.

  #. Enter information in all required fields (i.e., required fields are
     denoted with a red asterisk). 

      * If you clone an existing plan, make sure you choose the correct 
        **destination project** for the plan.

      * Make sure you link the correct repository and branch to the plan.

        .. note:: This only applies to the CZ Bamboo project since our repo 
                  lives on the CZ Bitbucket server. We could use the Bamboo
                  plugin to clone the repo as a plan task; however, we 
                  typically do not do this and use the 'script' interface to
                  clone via the git clone command. Nevertheless, linking
                  a repo to a plan allows us to set up the plan to run on
                  any branch in the repo.

                  A CZ repo cannot be linked to a plan on the RZ Bamboo 
                  project due to LC security constraints. To set up an
                  RZ Bamboo plan that is not associated with a repository 
                  choose 'Link new repository' and select 'None' from the 
                  pulldown menu. 

  #. Click 'Configure plan'. Bamboo will ask you to configure plan tasks.

  #. Click 'Add task' for each task you wish to add to the plan. Note that
     a typical Axom plan includes **script** tasks (either inline or run
     from files).

      * Start typing 'script' in the search field and select the script
        icon when it appears.

  #. Configure each task. For a 'script' task, this means:

      * Enter a short script description.
      
      * Choose 'inline' or 'file'. If inline, type in the script commands.
        If file, choose the file containing the script to run.

      * Fill in arguments, environment variables, etc. as needed.

  #. Check the box under 'Enable this plan?'

  #. Clock the 'Create' button.


Associating an agent to a Bamboo plan
----------------------------------------

Every Bamboo project has *agents* the run Bamboo jobs on LC platforms. When 
Bamboo executes a plan, it communicates with an agent associated with it for
the desired platform that runs tasks on the machine. Here are the steps to
associate an agent with a plan:

  #. Log on to the `MyLC` portal for the appropriate network (CZ or RZ).

  #. Switch to the Axom *shared user account* which is the account under which 
     all Axom plans run. First, click the 'change user' link at the upper right.
     Enter 'atk' as the user in the field at the upper lefti, choose the 
     account associated with the 'atk' LC username, and check the 'su to user' 
     box.

  #. Go into the 'bamboo agent management' portlet. You will see a list of
     agents and machines that we have. Select the machine you want to create
     the agent on and enter a descriptive name (e.g., axom-rzalastor), and 
     click 'create'.

  #. Finally, to attach the agent to a plan, you must send an email to the 
     LC Atlassian email list `lc-atlassian-admin@llnl.gov` requesting that
     the named agent you created be attached to the plans you want.

Restarting agents
------------------

.. important:: The content below is mainly usage notes. Much of what we want 
               to include here will be pulled from `Our Confluence Notes on Bamboo <https://lc.llnl.gov/confluence/display/ASCT/Bamboo+How-To%27s>`_


Bamboo Agent Notes
^^^^^^^^^^^^^^^^^^^
The Bamboo server hands our scripts to it's associated 'agents' on the various clusters.
Each bamboo agent needs to be approved by an LC Atlassian admin in order to start executing Bamboo plans.
The Atlassian admin will take care of associating your approved agent with your project and plan(s).

Restarting the Agent:
 On occasion, the agent can die.  This results in bamboo jobs being queued and stalled until the agent is restarted.
 You must have access to the Axom 'atk' shared user account to restart the agent.
 To manually restart the CZ agent: ::

  $ ssh cab687 xsu atk
  $ cd /g/g16/atk/bambooAgent/asctoolkit.cab.llnl.gov
  $ ./bin/bamboo-agent.sh stop/start

.. note ::
   Bamboo agents are created on and approved to run on specific nodes of a machine
   and admin approval is required to create agents on a different node.
   The project has approved agents on the following nodes:

     * CZ CHAOS: cab687
     * RZ CHAOS: rzalastor1
     * RZ TOSS 3: rzgenie2
     * BGQ: vulcanlac3

There are cron jobs on CZ and RZ that attempt to restart our agents every hour.


You can view the cron jobs on the CZ using::

 $ ssh cab687 xsu atk
 $ cd /g/g16/atk/bamboo
 $ crontab -l czcrontab.txt

And you can view the jobs on the RZ using::

 $ ssh rzalastor1 xsu atk
 $ cd /g/g16/atk/bamboo
 $ crontab -l rzcrontab.txt


Quick setup for adding additional agents::


  $ pick a node, for example if we are to create a bamboo agent on rzgenie for Axom
  $ atk@rzgenie2 ~/bamboo:/collab/usr/global/tools/bamboo/install-agent asctoolkit chang28@llnl.gov
  $ follow the instructions

.. note::
    After the agent is created, please contact Atlassian admin and get ready to start the bamboo agent.
    Make sure you have a test plan set up to be attached to the agent.



Agent Configuration:
  All of your Bamboo plan jobs are found in your build directory (all that are using the same agent, that is).  By default, this is under the directory where you started your agent.

To specify an alternative home directory, edit the wrapper.conf and restart your agent::

  $ vi <your-agent-home>/conf/wrapper.conf
  $ # change the following setting to the path you want your builds to run under
  $ wrapper.java.additional.1=-Dbamboo.home=/usr/workspace/wsrzc/atk/bamboo/asctoolkit-rzgenie2-1 (path to the build_dir
  $ restart the agent

Steps to Configure Bamboo Test Plan on a new system:

.. System could be a new architecture such as BGQ, or a new OS like TOSS3.
   I would describe the process that I used to set up BGQ test plan on bamboo.
   BGQ already has an agent in place on Vulcan.
..

  1. First we need a bamboo agent on the new system.
  2. After the agent is up and running, we need to make sure the Third Party Libraries (TPL) are built.
     TPL needs to happen before we can build the Axom code (for example, cmake needs to be ready).
     To set up a new system, modify the ``compilers.yaml`` script under ``scripts/uberenv``.
     A successful TPL build would generate host configuration files for each compiler defined in ``compilers.yaml``.
  3. The next step is to create a python script similar to ``llnl_cz_uberenv_install_chaos_5_x86_64_ib_all_compilers.py``.
     The script is located in ``scripts/uberenv/llnl_install_scripts``.

Automated plans
^^^^^^^^^^^^^^^^

Currently, we have the following test plans on CZ:

  Build and Test Develop Branch (all compilers, nightly)
    This is done on a nightly basis on the develop branch.
  Build and Test Master Branch (weekly, all compilers)
    This is done on a weekly basis on the master branch.
  Build and Test Branch (all compilers, on-demand)
    This is done manually on the master branch.
  Develop and Test TPL (weekly)
    This is done on a weekly basis on the develop branch.
  Smoke Test(On-Demand)
    This is done manually on the develop branch.


Currently, we have the following test plans on RZ:

  Build and Test Develop Branch (all compilers, nightly, rzalastor)
    This is done on a nightly basis on the develop branch.

Plan and Branches
^^^^^^^^^^^^^^^^^

To add a repository to a plan:

  1. Select Actions -> Configure Plan
  2. Select the Repositories tab
  3. Click the Add Repository button.

     Basic options:
       * Repository Host is "Bitbucket Server / Stash" (the cz server can also pull from Github)
       * Server is CZ Bitbucket (only option available)
       * Repository "Axom"
       * Select the branch

     Advanced Options:
       * Default is to use shallow clones
       * Have to explicitly select 'Use Submodules', if you want them
       * Enable a quiet period to aggregate multiple commits before building
       * Can enable a quiet period or add a regular expression to exclude particular changesets

  4. Add a "Source Code Checkout" step to the plan's tasks to pull the latest code

To create plans that use the branches feature:

  Axom has a nightly build plan that uses the develop branch as its primary repository.
  If you want to run the same plan on branches of this repository they can be set up a few different ways,
  selecting specific branches in the repository and/or create branch plans for branches matching a regular expression.
  The branches will then inherit all of the stages and jobs of the parent plan without having to duplicate the plan,
  so any modifications to the parent plan apply to all associated branches.
  Link: `Atlassian article on feature branches <https://www.atlassian.com/continuous-delivery/building-feature-branches-with-bamboo>`_

  The quick way to enable branch plans:

  * Select Actions -> Configure Plan
  * Select the Branches tab
  * Click the Create Plan Branch button in the Branches section (first section of the branches configuration)
  * Select the branches you would like to execute the parent plan on (this includes the triggers for the parent plan)
  * Select "Enable Branches" to make the branch plans active

Use a regular expression for your branch plan:

  * This would be useful to enable the sprint plans w/out having to worry about the sprint number
  * Also on the Branches tab of the plan configuration
  * In the Automatic branch management section
  * Select "Create plan branches for matching new branches" from the New Branches list
    * Add a regular expression in the 'Match name' text box (something like "/sprint\/([0-9]*)/" or "/feature\/")
    * Determine if you want Bamboo to delete plan branches after a period of time or a period of inactivity.  These are both set to do not delete by default, but once you select  the "Create plan branches for matching new branches" option they are set to automatically delete.
    * Branch merging is disabled by default (this would automatically merge branches if tests are successful)
    * IRA feature branches is selected by default, so if you enable the branches on this page, Bamboo will automatically create plan branches for branches that contain a JIRA ticket in the name.
    * Select triggers - either inherit the parent plan triggers or run the branch plan manually.

To execute a test plan/branch from command line:
  * Use this python script to execute a test plan /branch from a command line: /usr/bin/python ./queue_build.py
  * Use key can be found in this directory: login vulcanlac3 as atk, go to /g/g16/atk/bambooWorkspace/asctoolkit.cab.llnl.gov/xml-data/build-dir
  * Plan key can also be found from the test plan execution log file.

Who Can do What
^^^^^^^^^^^^^^^^
Bamboo allows certain tasks to be down with an elevated privilege. If one does not have the privilege, he/she cannot even see the screen/button. That causes major confusion among users. This cheat sheet is intended to provide guide line of what tasks can only be done by Admin, and what tasks can be done by Admin and users alike.

Tasks that can only be done by Atlassian admin:

  * Delete a plan.
  * Delete a job of a plan
  * Configure branches
  * Approve New Bamboo agent
  * Assign agent to a plan


Tasks that can be done by everyone:

  * Create a plan.
  * Configure a plan
  * Limit the job to run on Agent
  * Review agent log,  located at /g/g16/atk/bambooAgent/asctoolkit.cab2.llnl.gov/atlassian-bamboo-agent.log (asctoolkit.cab.llnl.gov)


