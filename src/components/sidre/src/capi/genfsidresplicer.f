! Generated by genfsidresplicer.py
! splicer begin class.DataGroup.type_bound_procedure_part
procedure :: register_allocatable_int_scalar_ptr => datagroup_register_allocatable_int_scalar_ptr
procedure :: register_allocatable_int_1d_ptr => datagroup_register_allocatable_int_1d_ptr
procedure :: register_allocatable_long_scalar_ptr => datagroup_register_allocatable_long_scalar_ptr
procedure :: register_allocatable_long_1d_ptr => datagroup_register_allocatable_long_1d_ptr
procedure :: register_allocatable_float_scalar_ptr => datagroup_register_allocatable_float_scalar_ptr
procedure :: register_allocatable_float_1d_ptr => datagroup_register_allocatable_float_1d_ptr
procedure :: register_allocatable_double_scalar_ptr => datagroup_register_allocatable_double_scalar_ptr
procedure :: register_allocatable_double_1d_ptr => datagroup_register_allocatable_double_1d_ptr
generic :: register_allocatable => &
    register_allocatable_int_scalar_ptr,  &
    register_allocatable_int_1d_ptr,  &
    register_allocatable_long_scalar_ptr,  &
    register_allocatable_long_1d_ptr,  &
    register_allocatable_float_scalar_ptr,  &
    register_allocatable_float_1d_ptr,  &
    register_allocatable_double_scalar_ptr,  &
    register_allocatable_double_1d_ptr
! splicer end class.DataGroup.type_bound_procedure_part

------------------------------------------------------------

! splicer begin class.DataGroup.additional_functions

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_int_scalar_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    integer(C_INT), allocatable, intent(IN) :: value
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_int_scalar_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_int_1d_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    integer(C_INT), allocatable, intent(IN) :: value(:)
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_int_1d_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_long_scalar_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    integer(C_LONG), allocatable, intent(IN) :: value
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_long_scalar_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_long_1d_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    integer(C_LONG), allocatable, intent(IN) :: value(:)
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_long_1d_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_float_scalar_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    real(C_FLOAT), allocatable, intent(IN) :: value
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_float_scalar_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_float_1d_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    real(C_FLOAT), allocatable, intent(IN) :: value(:)
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_float_1d_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_double_scalar_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    real(C_DOUBLE), allocatable, intent(IN) :: value
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_double_scalar_ptr

! Generated by genfsidresplicer.py
function datagroup_register_allocatable_double_1d_ptr(group, name, value) result(rv)
    use iso_c_binding
    implicit none
    class(datagroup), intent(IN) :: group
    character(*), intent(IN) :: name
    real(C_DOUBLE), allocatable, intent(IN) :: value(:)
    type(dataview) :: rv
    rv%voidptr = C_NULL_PTR
end function datagroup_register_allocatable_double_1d_ptr
! splicer end class.DataGroup.additional_functions
! splicer begin class.DataView.type_bound_procedure_part
procedure :: get_value_int_scalar_ptr => dataview_get_value_int_scalar_ptr
procedure :: get_value_int_1d_ptr => dataview_get_value_int_1d_ptr
procedure :: get_value_long_scalar_ptr => dataview_get_value_long_scalar_ptr
procedure :: get_value_long_1d_ptr => dataview_get_value_long_1d_ptr
procedure :: get_value_float_scalar_ptr => dataview_get_value_float_scalar_ptr
procedure :: get_value_float_1d_ptr => dataview_get_value_float_1d_ptr
procedure :: get_value_double_scalar_ptr => dataview_get_value_double_scalar_ptr
procedure :: get_value_double_1d_ptr => dataview_get_value_double_1d_ptr
generic :: get_value => &
    get_value_int_scalar_ptr,  &
    get_value_int_1d_ptr,  &
    get_value_long_scalar_ptr,  &
    get_value_long_1d_ptr,  &
    get_value_float_scalar_ptr,  &
    get_value_float_1d_ptr,  &
    get_value_double_scalar_ptr,  &
    get_value_double_1d_ptr
! splicer end class.DataView.type_bound_procedure_part

------------------------------------------------------------

! splicer begin class.DataView.additional_functions

! Generated by genfsidresplicer.py
subroutine dataview_get_value_int_scalar_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    integer(C_INT), pointer, intent(OUT) :: value
    type(C_PTR) cptr

    cptr = view%get_data_pointer()
    call c_f_pointer(cptr, value)
end subroutine dataview_get_value_int_scalar_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_int_1d_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    integer(C_INT), pointer, intent(OUT) :: value(:)
    type(C_PTR) cptr
    integer(C_SIZE_T) nelems

    cptr = view%get_data_pointer()
    nelems = view%get_number_of_elements()
    call c_f_pointer(cptr, value, [ nelems ])
end subroutine dataview_get_value_int_1d_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_long_scalar_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    integer(C_LONG), pointer, intent(OUT) :: value
    type(C_PTR) cptr

    cptr = view%get_data_pointer()
    call c_f_pointer(cptr, value)
end subroutine dataview_get_value_long_scalar_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_long_1d_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    integer(C_LONG), pointer, intent(OUT) :: value(:)
    type(C_PTR) cptr
    integer(C_SIZE_T) nelems

    cptr = view%get_data_pointer()
    nelems = view%get_number_of_elements()
    call c_f_pointer(cptr, value, [ nelems ])
end subroutine dataview_get_value_long_1d_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_float_scalar_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    real(C_FLOAT), pointer, intent(OUT) :: value
    type(C_PTR) cptr

    cptr = view%get_data_pointer()
    call c_f_pointer(cptr, value)
end subroutine dataview_get_value_float_scalar_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_float_1d_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    real(C_FLOAT), pointer, intent(OUT) :: value(:)
    type(C_PTR) cptr
    integer(C_SIZE_T) nelems

    cptr = view%get_data_pointer()
    nelems = view%get_number_of_elements()
    call c_f_pointer(cptr, value, [ nelems ])
end subroutine dataview_get_value_float_1d_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_double_scalar_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    real(C_DOUBLE), pointer, intent(OUT) :: value
    type(C_PTR) cptr

    cptr = view%get_data_pointer()
    call c_f_pointer(cptr, value)
end subroutine dataview_get_value_double_scalar_ptr

! Generated by genfsidresplicer.py
subroutine dataview_get_value_double_1d_ptr(view, value)
    use iso_c_binding
    implicit none
    class(dataview), intent(IN) :: view
    real(C_DOUBLE), pointer, intent(OUT) :: value(:)
    type(C_PTR) cptr
    integer(C_SIZE_T) nelems

    cptr = view%get_data_pointer()
    nelems = view%get_number_of_elements()
    call c_f_pointer(cptr, value, [ nelems ])
end subroutine dataview_get_value_double_1d_ptr
! splicer end class.DataView.additional_functions
