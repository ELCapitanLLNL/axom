#
# API for Spio
#
copyright:
  -
  - Copyright (c) 2015, Lawrence Livermore National Security, LLC.
  - Produced at the Lawrence Livermore National Laboratory.
  - 
  - All rights reserved.
  -
  - This source code cannot be distributed without permission and 
  - further review from Lawrence Livermore National Laboratory.
  -

library: SPIO
namespace: axom spio

options:
  C_prefix: SPIO_
  F_module_per_class: False

  # Any C++ function which returns a string will be wrapped in
  # Fortran as a subroutine with an additional character argument
  # for the result.
  F_string_result_as_arg: name

types:
  Group:
    cpp_header: sidre/Group.hpp
    cpp_type: axom::sidre::Group
    f_type: type(SidreGroup)
    f_module:
      sidre_mod: [ SidreGroup ]
    c_type: SIDRE_group
    c_header: sidre/wrapGroup.h
    c_fortran: type(C_PTR)
    f_to_c: '{f_var}%get_instance()'
    cpp_local_var: True
    c_to_cpp: static_cast<{C_const}{cpp_type}{ptr}>(static_cast<{C_const}void *>({c_var}))


classes:
  - name: IOManager
    cpp_header: spio/IOManager.hpp
    methods:
    - decl: IOManager * new(MPI_Comm com) +constructor
    - decl: void delete() +destructor
    - decl: void write(Group * grp, int num_files, const std::string& file_string, const std::string& protocol)
    - decl: void writeGroupToRootFile(Group * grp, const std::string& file_name)
    - decl: void read(Group * grp, const std::string& file_string, const std::string& protocol)
    - decl: void read(Group * grp, const std::string& root_file)
    - decl: void loadExternalData(Group * grp, const std::string& root_file)
