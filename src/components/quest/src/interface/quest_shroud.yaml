#
# API for Quest
#
copyright:
  -
  - Copyright (c) 2017, Lawrence Livermore National Security, LLC.
  -
  - Produced at the Lawrence Livermore National Laboratory
  -
  - LLNL-CODE-741217
  -
  - All rights reserved.
  -
  - This file is part of Axom.
  -
  - For details about use and distribution, please read axom/LICENSE.
  -

library: QUEST
cpp_header: quest/quest.hpp
namespace: axom quest

options:
  C_prefix: QUEST_
  F_module_name_library_template: axom_{library_lower}
#  F_module_per_class: False

  # Any C++ function which returns a string will be wrapped in
  # Fortran as a subroutine with an additional character argument
  # for the result.
  F_string_result_as_arg: name

  
functions:
- options:
    # Change the default template for Fortran functions to include the library name.
    F_name_impl_template: "{library_lower}_{class_prefix}{underscore_name}{function_suffix}"
- decl: void initialize( MPI_Comm comm, const std::string& fileName, bool requiresDistance, int ndims, int maxElements, int maxLevels )
- decl: void finalize()

- decl: double distance( double x, double y, double z )
##- decl: void distance( const double* xyz, double* dist, int npoints )

- decl: int inside( double x, double y, double z )
##- decl: void inside( const double* xyz, int* in, int npoints )

- decl: void mesh_min_bounds( double* coords+dimension+intent(OUT) )
- decl: void mesh_max_bounds( double* coords+dimension+intent(OUT) )
- decl: void mesh_center_of_mass( double* coords+dimension+intent(OUT) )
