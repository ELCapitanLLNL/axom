class ExClass1
method ExClass1 *new+constructor ( const string *name )
method void delete+destructor
method int incrementCount(int incr)
method const string& getName() const
method int GetNameLength() const
method const string& getNameErrorCheck() const
method const string& getNameArg() const
method ExClass2 *getRoot()
method int  getValue(int value)
method long getValue(long value)
method void *getAddr()
method bool hasAddr(bool in)
method void SplicerSpecial
Close wrapExClass1.h
Close wrapExClass1.cpp
class ExClass2
method ExClass2 *ExClass2+constructor (const string *name)
method void ExClass1+destructor
method const string& getName const
method GetNameLength
method ExClass1 *get_class1(ExClass1 *in)
method void* declare(TypeID type, SidreLength len)
method void destroyall()
method TypeID getTypeID() const
method void setValue(ValueType value)
method void setValue(ValueType value)
Close wrapExClass2.h
Close wrapExClass2.cpp
function void local_function1
function bool isNameValid(const std::string& name)
Close wrapUserLibrary.h
Close wrapUserLibrary.cpp
class ExClass1
method ExClass1 *new+constructor ( const string *name )
method void delete+destructor
method int incrementCount(int incr)
method const string& getName() const
method int GetNameLength() const
method const string& getNameErrorCheck() const
method const string& getNameArg() const
method ExClass2 *getRoot()
method int  getValue(int value)
method long getValue(long value)
method void *getAddr()
method bool hasAddr(bool in)
method void SplicerSpecial
Close wrapfExClass1.f
class ExClass2
method ExClass2 *ExClass2+constructor (const string *name)
method void ExClass1+destructor
method const string& getName const
method GetNameLength
method ExClass1 *get_class1(ExClass1 *in)
method void* declare(TypeID type, SidreLength len)
method void destroyall()
method TypeID getTypeID() const
method void setValue(ValueType value)
method void setValue(ValueType value)
Close wrapfExClass2.f
function void local_function1
function bool isNameValid(const std::string& name)
Close wrapfuserlibrary.f
class ExClass1
method ExClass1 *new+constructor ( const string *name )
method void delete+destructor
method int incrementCount(int incr)
method const string& getName() const
method int GetNameLength() const
method const string& getNameErrorCheck() const
method const string& getNameArg() const
method ExClass2 *getRoot()
method int  getValue(int value)
method long getValue(long value)
method void *getAddr()
method bool hasAddr(bool in)
method void SplicerSpecial
Close pyExClass1type.cpp
class ExClass2
method ExClass2 *ExClass2+constructor (const string *name)
method void ExClass1+destructor
method const string& getName const
method GetNameLength
method ExClass1 *get_class1(ExClass1 *in)
method void* declare(TypeID type, SidreLength len)
method void destroyall()
method TypeID getTypeID() const
Close pyExClass2type.cpp
function void local_function1
function bool isNameValid(const std::string& name)
Close pyUserLibrarymodule.hpp
Close pyUserLibrarymodule.cpp
Close pyUserLibraryhelper.cpp
