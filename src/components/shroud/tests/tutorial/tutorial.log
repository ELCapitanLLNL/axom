Read yaml tutorial.yaml
Skipping Function4a, unable to create C wrapper for function returning std::string instance (must return a pointer or reference).
Read splicer ftutorialsplicer.f
Close tutorial_types.yaml
class Class1
C method Class1 * new()+constructor
C method void delete()+destructor
C method void Method1()
Close wrapClass1.h
Close wrapClass1.cpp
C function void Function1()
C function double Function2(double arg1+intent(in)+value, int arg2+intent(in)+value)
C function void Sum(int len+intent(in)+value, int * values+dimension((*))+intent(in), int * result+intent(out))
C function bool Function3(bool arg+intent(in)+value)
C function void Function3b(const bool arg1+intent(in)+value, bool * arg2+intent(out), bool * arg3+intent(inout))
C function void Function4a(const std::string & arg1+intent(in)+len_trim(Larg1), const std::string & arg2+intent(in)+len_trim(Larg2), std::string * SH_F_rv+intent(out)+len(LSH_F_rv))
C function const std::string & Function4b(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
C function void Function4b(const std::string & arg1+intent(in)+len_trim(Larg1), const std::string & arg2+intent(in)+len_trim(Larg2), std::string & output+intent(out)+len(Loutput))
C function double Function5()
C function double Function5(double arg1+default(3.1415)+intent(in)+value)
C function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
C function void Function6(const std::string & name+intent(in))
C function void Function6(const std::string & name+intent(in)+len_trim(Lname))
C function void Function6(int indx+intent(in)+value)
C function void Function7(int arg+intent(in)+value)
C function void Function7(double arg+intent(in)+value)
C function int Function8()
C function double Function8()
C function void Function9(double arg+intent(in)+value)
C function void Function10()
C function void Function10(const std::string & name+intent(in), double arg2+intent(in)+value)
C function void Function10(const std::string & name+intent(in)+len_trim(Lname), double arg2+intent(in)+value)
C function int overload1(int num+intent(in)+value)
C function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value)
C function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
C function int overload1(double type+intent(in)+value, int num+intent(in)+value)
C function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value)
C function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
C function TypeID typefunc(TypeID arg+intent(in)+value)
C function EnumTypeID enumfunc(EnumTypeID arg+intent(in)+value)
C function void useclass(const Class1 * arg1+intent(in)+value)
C function const std::string & LastFunctionCalled()+pure
C function void LastFunctionCalled(std::string & SH_F_rv+intent(out)+len(LSH_F_rv))+pure
Close wrapTutorial.h
Close wrapTutorial.cpp
Close shroudrt.hpp
Close shroudrt.cpp
class Class1
C-interface, Fortran method Class1 * new()+constructor
C-interface, Fortran method void delete()+destructor
C-interface, Fortran method void Method1()
C-interface, Fortran function void Function1()
C-interface, Fortran function double Function2(double arg1+intent(in)+value, int arg2+intent(in)+value)
C-interface, Fortran function void Sum(int len+intent(in)+value, int * values+dimension((*))+intent(in), int * result+intent(out))
C-interface, Fortran function bool Function3(bool arg+intent(in)+value)
C-interface, Fortran function void Function3b(const bool arg1+intent(in)+value, bool * arg2+intent(out), bool * arg3+intent(inout))
Fortran function const std::string Function4a(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
C-interface function void Function4a(const std::string & arg1+intent(in)+len_trim(Larg1), const std::string & arg2+intent(in)+len_trim(Larg2), std::string * SH_F_rv+intent(out)+len(LSH_F_rv))
C-interface function const std::string & Function4b(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
C-interface function void Function4b(const std::string & arg1+intent(in)+len_trim(Larg1), const std::string & arg2+intent(in)+len_trim(Larg2), std::string & output+intent(out)+len(Loutput))
Fortran function void Function4b(const std::string & arg1+intent(in)+len_trim(Larg1), const std::string & arg2+intent(in)+len_trim(Larg2), std::string & output+intent(out)+len(Loutput))
C-interface, Fortran function double Function5()
C-interface, Fortran function double Function5(double arg1+default(3.1415)+intent(in)+value)
C-interface, Fortran function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
C-interface, Fortran function void Function6(const std::string & name+intent(in))
C-interface function void Function6(const std::string & name+intent(in)+len_trim(Lname))
C-interface, Fortran function void Function6(int indx+intent(in)+value)
C-interface, Fortran function void Function7(int arg+intent(in)+value)
C-interface, Fortran function void Function7(double arg+intent(in)+value)
C-interface, Fortran function int Function8()
C-interface, Fortran function double Function8()
C-interface function void Function9(double arg+intent(in)+value)
Fortran function void Function9(float arg+intent(in)+value)
Fortran function void Function9(double arg+intent(in)+value)
C-interface, Fortran function void Function10()
C-interface function void Function10(const std::string & name+intent(in), double arg2+intent(in)+value)
Fortran function void Function10(const std::string & name+intent(in), float arg2+intent(in)+value)
Fortran function void Function10(const std::string & name+intent(in), double arg2+intent(in)+value)
C-interface function void Function10(const std::string & name+intent(in)+len_trim(Lname), double arg2+intent(in)+value)
C-interface, Fortran function int overload1(int num+intent(in)+value)
C-interface, Fortran function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value)
C-interface, Fortran function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
C-interface, Fortran function int overload1(double type+intent(in)+value, int num+intent(in)+value)
C-interface, Fortran function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value)
C-interface, Fortran function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
C-interface, Fortran function TypeID typefunc(TypeID arg+intent(in)+value)
C-interface, Fortran function EnumTypeID enumfunc(EnumTypeID arg+intent(in)+value)
C-interface, Fortran function void useclass(const Class1 * arg1+intent(in)+value)
C-interface function const std::string & LastFunctionCalled()+pure
C-interface function void LastFunctionCalled(std::string & SH_F_rv+intent(out)+len(LSH_F_rv))+pure
Fortran function const string_result_fstr & LastFunctionCalled()+pure
Close wrapftutorial.f
class Class1
Python method Class1 * new()+constructor
Python method void delete()+destructor
Python method void Method1()
Close pyClass1type.cpp
Python function void Function1()
Python function double Function2(double arg1+intent(in)+value, int arg2+intent(in)+value)
Python function bool Function3(bool arg+intent(in)+value)
Python function const std::string Function4a(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
Python function const std::string & Function4b(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
Python function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
Python function void Function6(const std::string & name+intent(in))
Python function void Function6(int indx+intent(in)+value)
Python function void Function9(double arg+intent(in)+value)
Python function void Function10()
Python function void Function10(const std::string & name+intent(in), double arg2+intent(in)+value)
Python function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Python function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Python function TypeID typefunc(TypeID arg+intent(in)+value)
Python function EnumTypeID enumfunc(EnumTypeID arg+intent(in)+value)
Python function void useclass(const Class1 * arg1+intent(in)+value)
Python function const std::string & LastFunctionCalled()+pure
Close pyTutorialmodule.hpp
Close pyTutorialmodule.cpp
Close pyTutorialhelper.cpp
Lua method Class1 * new()+constructor
Lua method void delete()+destructor
Lua method void Method1()
Lua function void Function1()
Lua function double Function2(double arg1+intent(in)+value, int arg2+intent(in)+value)
Lua function bool Function3(bool arg+intent(in)+value)
Lua function const std::string Function4a(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
Lua function const std::string & Function4b(const std::string & arg1+intent(in), const std::string & arg2+intent(in))
Lua function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
Lua function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
Lua function double Function5(double arg1+default(3.1415)+intent(in)+value, bool arg2+default(true)+intent(in)+value)
Lua function void Function6(const std::string & name+intent(in))
Lua function void Function6(int indx+intent(in)+value)
Lua function void Function9(double arg+intent(in)+value)
Lua function void Function10()
Lua function void Function10(const std::string & name+intent(in), double arg2+intent(in)+value)
Lua function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function int overload1(int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function int overload1(double type+intent(in)+value, int num+intent(in)+value, int offset+default(0)+intent(in)+value, int stride+default(1)+intent(in)+value)
Lua function TypeID typefunc(TypeID arg+intent(in)+value)
Lua function EnumTypeID enumfunc(EnumTypeID arg+intent(in)+value)
Lua function const std::string & LastFunctionCalled()+pure
Close luaTutorialmodule.hpp
Close luaTutorialmodule.cpp
